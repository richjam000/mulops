README

Product:                mulops
Release:                4.4
Date:                   6th July 2016
Code language:          perl
Catalogue format:       JSON

Description:
See Specification:      https://sourceforge.net/projects/mulops/files
Tested on:              Oracle-Virtualbox VMs = centos, ubuntu, solaris,
                        and Windows10
                        Check with: "mulops teststatus"
Please Feedback to:     https://sourceforge.net/projects/mulops
                        Or email Richard.Jamieson@scsuk.net

INSTALL:
   The release tar file contains a top-level directory called 
   "mulops", which contains sub-directories with the rest of the 
   code and config files.
   ( See "CONTENTS" listing below ).

   Recommended install procedure.

   i)   Select location for the "mulops" top-level directory.
        eg:     $HOME
	eg:	/opt
	eg:	/usr/share
	eg:	C:\Users\rich\downloads
	eg:	C:\Program Files

   ii)  Unzip and untar the release.
        eg:     cd $HOME
                gunzip mulops_4.2.tar.gz
                tar xvf mulops_4.2.tar

CONFIGURE:

   UNIX: 	Put the mulops/bin directory in your search PATH.
                eg:     PATH=$PATH:$HOME/mulops/bin
                Or just create an alias
	        eg:     alias mulops=/opt/mulops/bin/mulops

   WINDOWS:	
   i)	You need to install perl with this version !!
        eg:	eg: http://strawberryperl.com

   ii)	Create a batch file contining and alias for perl mulops
	eg:	
        C:\Users\rich\autorun.bat
	@echo off
	doskey mulops=perl c:/Users/rich/downloads/mulops/bin/mulops $*

   iii)	Update registry so that the batch file is run every time you 
        start a "Command Prompt"
	a)	regedit
	b)	HKEY_CURRENT_USER\Software\Microsoft\Command Processor
	c)	Create a new “string value” called “AutoRun – and set 
                the value to the path of your batch file, eg:
		C:\Users\rich\autorun.bat
	
USAGE:

   i)      mulops usage.doc       # To see Usage details.

   ii)     mulops manual.doc      # To see man page

   iii)    mulops readme.doc      # To see this README


CONTENTS:
   mulops:         # Top directory for mulops code and configuration files.

   mulops/bin:    # mulops script + mulops "support scripts".
   file: linux.distro
   file: linux.version
   file: mulops

   mulops/doc:     	# This "README" + DEMO mulops "support docs".
   file: aix.useradmin.doc
   file: hpux.useradmin.doc
   file: linix.useradmin.doc
   file: solaris.useradmin.doc
   file: mulops.manual.doc
   file: mulops.usage.doc
   file: mulops.README.doc

   mulops/catalogs:     	# mulops JSON catalogs
   file: mulcat.default.json
   file: mulcat.demo.json
   file: mulcat.osinfo.json
   file: mulcat.teststatus.json

   mulops/catalogs:		# also used for default groups file
   file: mulgroup.default.json

   dir: mulops/models:       	# mulops sample "model" files ( see manual ).

   dir: mulops/lib:             # Core and support perl modules
  	
   file: MULOPS.pm              # mulops module

   dir: Linux::Distribution 	# Only needed on Linux servers.
   OFFICIAL SOURCE: CPAN : 
   http://search.cpan.org/~chorny/Linux-Distribution-0.23/lib/Linux/Distribution.pm

   dir: JSON : required for interpretation of JSON catalogs
   OFFICIAL SOURCE: CPAN : 
   http://search.cpan.org/~makamaka/JSON-2.90/lib/JSON.pm
	
   dir: HTTP:Lite : required for collection of web based catalogs
   OFFICIAL SOURCE: CPAN : 
   http://search.cpan.org/~neilb/HTTP-Lite-2.44/lib/HTTP/Lite.pm
	
   dir: Capture::Tiny::Extended : Required to properly capture OS return codes
   OFFICIAL SOURCE: CPAN : 
   http://search.cpan.org/~mithaldu/Capture-Tiny-Extended-0.114/lib/Capture/Tiny/Extended.pm


---------------------------------------------------------------------------------
2.0 Update 23/5/2016:
This release uses JSON format catalogs - review the "etc" directory
All code more generic than previous release - ostype and osversion code moved out
of core "mulops" program and into catalog and support scripts.
---------------------------------------------------------------------------------
2.1 Update 25/5/2016
"catalogue" becomes "catalog" !
bug fixes post solaris testing
---------------------------------------------------------------------------------
3.0 Update 29/5/2016
i)	Added perl module: HTTP:Lite
	Added ability to fetch json catalogs via http.
ii)	Added perl module: Capture::Tiny::Extended
	Improved return-code/stderr handling when exeuting underlying OS commands.
iii)	Caching of catalogs.
	Recursive nature of mulops means catalogue are required for each recursion.
iv)	Caching of mulops returned data.
 	Recursive nature of mulops means same mulops argument may egt referred to again and again.
v)	Changed(shortened) default naming format of catalogs - eg: mulact.{name}.json.
---------------------------------------------------------------------------------
4.0 Update 15/6/2015
i)	Tested on windows-10 + added catalogs for Windows.
ii)	Changed mulops optional parameters
	a)	Will now accept multiple mulops-commands
		eg:	mulops memused% model numcpus
	b)	Flags
		-d:	Now used to show "description"s.
		-o:	User to show "oscommands"
		-c:	Still used to show catalogs
		-u:	Flag replaced by "mulops usage"
		-m:	Flag replaced by "mulops manual"

		Flags also work for multiple mulops-commands.
		eg:	mulops -o memused% model numcpus
iii)	Modeling
	Ability to manually over-ride mulops command output.
	Useful if you wanted to see what command would if.....
	a)	eg: what command would be selected to run on a diffent OS-version.
	b)	eg: what would run if you server had more memory
iv)	Gerneral simplification of mulops function return values.
---------------------------------------------------------------------------------
4.2 Update 21/6/2015
i)	No change in functionality - just a code re-org

---------------------------------------------------------------------------------
4.4 Update 6/7/2015
i)	Added "groups" - see "-g flag" in  updated usage doc ("mulops usage.doc")
ii)	Added display-only code for docs.
	Any mulops-commands ending .doc should only specify the doc name as the "oscommand".
        mulops will handle the display of the doc.
iii)    Created meaningful return codes.
	Failed single command will exit with exit-code = "1".
        Multiple failues will have and exit code equal to the number of failures.
---------------------------------------------------------------------------------
